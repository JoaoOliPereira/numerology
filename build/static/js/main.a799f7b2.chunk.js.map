{"version":3,"sources":["components/Card.jsx","utils/numerologyUtils.js","App.jsx","reportWebVitals.js","index.js"],"names":["Card","_ref","title","description","children","React","createElement","className","tabelaNumeros","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","reduzir","num","toString","split","reduce","acc","val","Number","calcularLicoesCarmicas","nome","numeros","toUpperCase","replace","map","letra","nomeParaNumeros","presentes","Set","filter","n","has","numerosKarmicos","App","dataNascimento","setDataNascimento","useState","nomeCompleto","setNomeCompleto","style","maxWidth","margin","display","gap","gridTemplateColumns","htmlFor","marginBottom","type","id","value","onChange","e","target","width","padding","borderRadius","border","marginTop","placeholder","fontWeight","fontSize","textAlign","data","ano","mes","dia","calcularNumeroDeVida","opacity","includes","calcularNumeroDaAlma","anoNasc","mesNasc","diaNasc","anoAtual","Date","getFullYear","calcularAnoPessoal","join","soma","numeroAntesDeReduzir","numeroFinal","digit","parseInt","karmico","calcularNumerosKarmicos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.a799f7b2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\"; // vamos criar este CSS depois\r\n\r\nexport default function Card({ title, description, children }) {\r\n  return (\r\n    <div className=\"card\">\r\n      <h3>{title}</h3>\r\n      <p>{description}</p>\r\n      <div className=\"card-content\">{children}</div>\r\n    </div>\r\n  );\r\n}","// tabela pitagórica\r\nconst tabelaNumeros = {\r\n  A: 1, B: 2, C: 3, D: 4, E: 5, F: 6, G: 7, H: 8, I: 9,\r\n  J: 1, K: 2, L: 3, M: 4, N: 5, O: 6, P: 7, Q: 8, R: 9,\r\n  S: 1, T: 2, U: 3, V: 4, W: 5, X: 6, Y: 7, Z: 8\r\n};\r\n\r\nfunction reduzir(num) {\r\n  if (num < 10) return num;\r\n  return reduzir(\r\n    num\r\n      .toString()\r\n      .split(\"\")\r\n      .reduce((acc, val) => acc + Number(val), 0)\r\n  );\r\n}\r\n\r\n// Calcula número de vida (data nascimento)\r\nexport function calcularNumeroDeVida(data) {\r\n  if (!data) return null;\r\n  const [ano, mes, dia] = data.split(\"-\").map(Number);\r\n  if (!ano || !mes || !dia) return null;\r\n\r\n  const soma =\r\n    ano\r\n      .toString()\r\n      .split(\"\")\r\n      .reduce((acc, val) => acc + Number(val), 0) +\r\n    mes\r\n      .toString()\r\n      .split(\"\")\r\n      .reduce((acc, val) => acc + Number(val), 0) +\r\n    dia\r\n      .toString()\r\n      .split(\"\")\r\n      .reduce((acc, val) => acc + Number(val), 0);\r\n\r\n  return reduzir(soma);\r\n}\r\n\r\n// Função auxiliar para converter nome para números\r\nfunction nomeParaNumeros(nome) {\r\n  return nome\r\n    .toUpperCase()\r\n    .replace(/[^A-Z]/g, \"\")\r\n    .split(\"\")\r\n    .map((letra) => tabelaNumeros[letra] || 0);\r\n}\r\n\r\n// Número da Personalidade: soma das consoantes reduzida\r\nexport function calcularNumeroDaPersonalidade(nome) {\r\n  if (!nome) return null;\r\n  const consoantes = nome\r\n    .toUpperCase()\r\n    .replace(/[^A-Z]/g, \"\")\r\n    .split(\"\")\r\n    .filter((letra) => !\"AEIOU\".includes(letra));\r\n\r\n  const soma = consoantes.reduce((acc, letra) => acc + tabelaNumeros[letra], 0);\r\n\r\n  return reduzir(soma);\r\n}\r\n\r\n// Número da Alma: soma das vogais reduzida\r\nexport function calcularNumeroDaAlma(nome) {\r\n  if (!nome) return null;\r\n  const vogais = nome\r\n    .toUpperCase()\r\n    .replace(/[^A-Z]/g, \"\")\r\n    .split(\"\")\r\n    .filter((letra) => \"AEIOU\".includes(letra));\r\n\r\n  const soma = vogais.reduce((acc, letra) => acc + tabelaNumeros[letra], 0);\r\n\r\n  return reduzir(soma);\r\n}\r\n\r\n// Ano pessoal básico: soma dia + mês + ano atual, reduzido\r\nexport function calcularAnoPessoal(data) {\r\n  if (!data) return null;\r\n  const [anoNasc, mesNasc, diaNasc] = data.split(\"-\").map(Number);\r\n  if (!anoNasc || !mesNasc || !diaNasc) return null;\r\n\r\n  const anoAtual = new Date().getFullYear();\r\n\r\n  const soma =\r\n    diaNasc\r\n      .toString()\r\n      .split(\"\")\r\n      .reduce((acc, val) => acc + Number(val), 0) +\r\n    mesNasc\r\n      .toString()\r\n      .split(\"\")\r\n      .reduce((acc, val) => acc + Number(val), 0) +\r\n    anoAtual\r\n      .toString()\r\n      .split(\"\")\r\n      .reduce((acc, val) => acc + Number(val), 0);\r\n\r\n  return reduzir(soma);\r\n}\r\n\r\n// Lições Cármicas: números de 1 a 9 que não aparecem no nome\r\nexport function calcularLicoesCarmicas(nome) {\r\n  const numeros = nomeParaNumeros(nome);\r\n  const presentes = new Set(numeros);\r\n  const todos = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n  return todos.filter((n) => !presentes.has(n));\r\n}\r\n\r\n// Números kármicos reconhecidos\r\nconst numerosKarmicos = [13, 14, 16, 19];\r\n\r\n// Soma os números de um nome e verifica se algum desses aparece\r\nexport function calcularNumerosKarmicos(nome) {\r\n  const nomeLimpo = nome.toUpperCase().replace(/[^A-Z]/g, \"\");\r\n\r\n  const soma = nomeLimpo.split(\"\").reduce((acc, letra) => {\r\n    const valor = tabelaNumeros[letra] || 0;\r\n    return acc + valor;\r\n  }, 0);\r\n\r\n  // Salva valor antes de reduzir\r\n  const numeroAntesDeReduzir = soma;\r\n\r\n  // Reduz o número até obter 1–9 (exceto 11/22 se quiser manter mestres)\r\n  const reduzir = (n) => {\r\n    while (n > 9 && n !== 11 && n !== 22 && n !== 33) {\r\n      n = n\r\n        .toString()\r\n        .split(\"\")\r\n        .reduce((acc, digit) => acc + parseInt(digit), 0);\r\n    }\r\n    return n;\r\n  };\r\n\r\n  const numeroFinal = reduzir(soma);\r\n\r\n  // Se a soma original for um número kármico, devolve essa informação\r\n  if (numerosKarmicos.includes(numeroAntesDeReduzir)) {\r\n    return {\r\n      numeroFinal,\r\n      karmico: numeroAntesDeReduzir,\r\n    };\r\n  }\r\n\r\n  return {\r\n    numeroFinal,\r\n    karmico: null,\r\n  };\r\n}","import React, { useState } from \"react\";\r\nimport Card from \"./components/Card\";\r\nimport {\r\n  calcularNumeroDeVida,\r\n  calcularNumeroDaPersonalidade,\r\n  calcularNumeroDaAlma,\r\n  calcularAnoPessoal,\r\n  calcularLicoesCarmicas,\r\n  calcularNumerosKarmicos,\r\n} from \"./utils/numerologyUtils\";\r\n\r\nexport default function App() {\r\n  const [dataNascimento, setDataNascimento] = useState(\"\");\r\n  const [nomeCompleto, setNomeCompleto] = useState(\"\");\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        maxWidth: \"960px\",\r\n        margin: \"2rem auto\",\r\n        display: \"grid\",\r\n        gap: \"1.5rem\",\r\n        gridTemplateColumns: \"repeat(auto-fit,minmax(300px,1fr))\",\r\n      }}\r\n    >\r\n      {/* Inputs Gerais */}\r\n      <Card title=\"Informações Pessoais\" description=\"Digite seus dados para calcular os números\">\r\n        <label htmlFor=\"dataNascimento\" style={{ display: \"block\", marginBottom: 8 }}>\r\n          Data de Nascimento:\r\n        </label>\r\n        <input\r\n          type=\"date\"\r\n          id=\"dataNascimento\"\r\n          value={dataNascimento}\r\n          onChange={(e) => setDataNascimento(e.target.value)}\r\n          style={{ width: \"100%\", padding: 8, borderRadius: 6, border: \"1px solid #ccc\" }}\r\n        />\r\n\r\n        <label htmlFor=\"nomeCompleto\" style={{ display: \"block\", marginTop: 12, marginBottom: 8 }}>\r\n          Nome Completo:\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"nomeCompleto\"\r\n          value={nomeCompleto}\r\n          onChange={(e) => setNomeCompleto(e.target.value)}\r\n          placeholder=\"Seu nome completo\"\r\n          style={{ width: \"100%\", padding: 8, borderRadius: 6, border: \"1px solid #ccc\" }}\r\n        />\r\n      </Card>\r\n\r\n      {/* Cartões com cálculo e resultado */}\r\n      <Card title=\"Número de Vida\" description=\"Número baseado na sua data de nascimento\">\r\n        {dataNascimento ? (\r\n          <div style={{ fontWeight: \"bold\", fontSize: 24, textAlign: \"center\" }}>\r\n            {calcularNumeroDeVida(dataNascimento)}\r\n          </div>\r\n        ) : (\r\n          <p style={{ opacity: 0.7, textAlign: \"center\" }}>Preencha a data de nascimento</p>\r\n        )}\r\n      </Card>\r\n\r\n      <Card\r\n        title=\"Número da Personalidade\"\r\n        description=\"Características externas baseadas nas consoantes do seu nome\"\r\n      >\r\n        {nomeCompleto ? (\r\n          <div style={{ fontWeight: \"bold\", fontSize: 24, textAlign: \"center\" }}>\r\n            {calcularNumeroDaPersonalidade(nomeCompleto)}\r\n          </div>\r\n        ) : (\r\n          <p style={{ opacity: 0.7, textAlign: \"center\" }}>Preencha o nome completo</p>\r\n        )}\r\n      </Card>\r\n\r\n      <Card\r\n        title=\"Número da Alma\"\r\n        description=\"Motivações internas baseadas nas vogais do seu nome\"\r\n      >\r\n        {nomeCompleto ? (\r\n          <div style={{ fontWeight: \"bold\", fontSize: 24, textAlign: \"center\" }}>\r\n            {calcularNumeroDaAlma(nomeCompleto)}\r\n          </div>\r\n        ) : (\r\n          <p style={{ opacity: 0.7, textAlign: \"center\" }}>Preencha o nome completo</p>\r\n        )}\r\n      </Card>\r\n\r\n      <Card\r\n        title=\"Ano Pessoal\"\r\n        description=\"Ano pessoal básico calculado com sua data de nascimento e ano atual\"\r\n      >\r\n        {dataNascimento ? (\r\n          <div style={{ fontWeight: \"bold\", fontSize: 24, textAlign: \"center\" }}>\r\n            {calcularAnoPessoal(dataNascimento)}\r\n          </div>\r\n        ) : (\r\n          <p style={{ opacity: 0.7, textAlign: \"center\" }}>Preencha a data de nascimento</p>\r\n        )}\r\n      </Card>\r\n\r\n      <Card\r\n        title=\"Lições Cármicas\"\r\n        description=\"Números que indicam lições a serem aprendidas na vida\"\r\n      >\r\n        {nomeCompleto ? (\r\n          <div style={{ fontWeight: \"bold\", fontSize: 18, textAlign: \"center\" }}>\r\n            {calcularLicoesCarmicas(nomeCompleto).join(\", \") || \"Nenhuma\"}\r\n          </div>\r\n        ) : (\r\n          <p style={{ opacity: 0.7, textAlign: \"center\" }}>Preencha o nome completo</p>\r\n        )}\r\n      </Card>\r\n\r\n      <Card\r\n        title=\"Números Kármicos\"\r\n        description=\"Números que indicam dívidas ou desafios cármicos\"\r\n      >\r\n        {nomeCompleto ? (\r\n          <div style={{ fontWeight: \"bold\", fontSize: 18, textAlign: \"center\" }}>\r\n            {calcularNumerosKarmicos(nomeCompleto).join(\", \") || \"Nenhum\"}\r\n          </div>\r\n        ) : (\r\n          <p style={{ opacity: 0.7, textAlign: \"center\" }}>Preencha o nome completo</p>\r\n        )}\r\n      </Card>\r\n    </div>\r\n  );\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}